<!DOCTYPE html>
<html>

<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Admin</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .container {
            max-width: 800px;
            padding: 20px;
            text-align: center;
        }

        .gallery {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .image {
            position: relative;
        }

        .image img {
            max-width: 100%;
            height: auto;
            display: block;
            border: 1px solid #ddd;
        }

        .delete-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: red;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
        }

        .upload-btn-wrapper {
            position: relative;
            overflow: hidden;
            display: inline-block;
            margin-bottom: 20px;
        }

        .btn {
            border: 2px solid gray;
            color: gray;
            background-color: white;
            padding: 8px 20px;
            border-radius: 8px;
            font-size: 18px;
            font-weight: bold;
        }

        .upload-btn-wrapper input[type="file"] {
            position: absolute;
            left: 0;
            top: 0;
            opacity: 0;
        }

        .confirmation-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .confirmation-content {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
        }

        .confirmation-buttons {
            margin-top: 10px;
        }

        .confirmation-buttons button {
            margin: 0 10px;
            padding: 5px 10px;
            border: none;
            cursor: pointer;
        }

        .confirmation-buttons button.confirm {
            background-color: red;
            color: white;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
        }

        .container {
            padding: 20px;
            background-color: #fff;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
        }

        .input-group {
            margin-bottom: 20px;
        }

        .form-control {
            border-radius: 5px;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .table th,
        .table td {
            vertical-align: middle;
        }

        .edit-button {
            padding: 5px 10px;
        }

        @import url("https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap");

        :root {
            --header-height: 3rem;
            --nav-width: 68px;
            --first-color: #4723D9;
            --first-color-light: #AFA5D9;
            --white-color: #F7F6FB;
            --body-font: 'Nunito', sans-serif;
            --normal-font-size: 1rem;
            --z-fixed: 100
        }

        *,
        ::before,
        ::after {
            box-sizing: border-box
        }

        body {
            position: relative;
            margin: var(--header-height) 0 0 0;
            padding: 0 1rem;
            font-family: var(--body-font);
            font-size: var(--normal-font-size);
            transition: .5s
        }

        a {
            text-decoration: none
        }

        .header {
            width: 100%;
            height: var(--header-height);
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1rem;
            background-color: var(--white-color);
            z-index: var(--z-fixed);
            transition: .5s
        }

        .header_toggle {
            color: var(--first-color);
            font-size: 1.5rem;
            cursor: pointer
        }

        .header_img {
            width: 35px;
            height: 35px;
            display: flex;
            justify-content: center;
            border-radius: 50%;
            overflow: hidden
        }

        .header_img img {
            width: 40px
        }

        .l-navbar {
            position: fixed;
            top: 0;
            left: -30%;
            width: var(--nav-width);
            height: 100vh;
            background-color: var(--first-color);
            padding: .5rem 1rem 0 0;
            transition: .5s;
            z-index: var(--z-fixed)
        }

        .nav {
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            overflow: hidden
        }

        .nav_logo,
        .nav_link {
            display: grid;
            grid-template-columns: max-content max-content;
            align-items: center;
            column-gap: 1rem;
            padding: .5rem 0 .5rem 1.5rem
        }

        .nav_logo {
            margin-bottom: 2rem
        }

        .nav_logo-icon {
            font-size: 1.25rem;
            color: var(--white-color)
        }

        .nav_logo-name {
            color: var(--white-color);
            font-weight: 700
        }

        .nav_link {
            position: relative;
            color: var(--first-color-light);
            margin-bottom: 1.5rem;
            transition: .3s
        }

        .nav_link:hover {
            color: var(--white-color)
        }

        .nav_icon {
            font-size: 1.25rem
        }

        .show {
            left: 0
        }

        .body-pd {
            padding-left: calc(var(--nav-width) + 1rem)
        }

        .active {
            color: var(--white-color)
        }

        .active::before {
            content: '';
            position: absolute;
            left: 0;
            width: 2px;
            height: 32px;
            background-color: var(--white-color)
        }

        .height-100 {
            height: 100vh
        }

        @media screen and (max-width: 768px) {
            .header {
                padding: 0 1rem;
            }

            .l-navbar {
                padding: 1rem 1rem 0 0;
            }

            body {
                padding: calc(var(--header-height) + 1rem);
            }

            .input-group {
                width: 100%;
            }
        }
    </style>
</head>

<body>

    <body id="body-pd">
        <header class="header" id="header">
            <div class="header_toggle"> <i class='bx bx-menu' id="header-toggle"></i> </div>

        </header>
        <div class="l-navbar" id="nav-bar">
            <nav class="nav">
                <div>
                    <div class="nav_list">
                        <a href="/admin/dashboard" class="nav_link">
                            <i class='bx bx-grid-alt nav_icon'></i>
                            <span class="nav_name">Dashboard</span>
                        </a>
                        <a href="/admin/upload" class="nav_link active">
                            <i class='bx bx-image-add nav_icon'></i>
                            <span class="nav_name">Upload Pictures</span>
                        </a>
                        <a href="/adminBooking" class="nav_link active">
                            <i class='bx bx-book-add nav_icon'></i>
                            <span class="nav_name">Admin Booking</span>
                        </a>
                    </div>
                </div> <a id="logout" class="nav_link"> <i class='bx bx-log-out nav_icon'></i> <span
                        class="nav_name">SignOut</span>
                </a>
            </nav>
        </div>
        <!--Container Main start-->

        </div>

        <div class="container">
            <h1>Image Gallery</h1>

            <div class="upload-btn-wrapper">
                <button class="btn">Upload Images</button>
                <input type="file" name="image" accept="image/*" multiple />
            </div>

            <div class="gallery" id="imageGallery">
                <!-- Images will be dynamically added here -->
            </div>

        </div>
        <div class="confirmation-modal" id="confirmationModal">
            <div class="confirmation-content">
                <p>Are you sure you want to delete this image?</p>
                <div class="confirmation-buttons">
                    <button class="confirm" id="confirmDelete">Yes</button>
                    <button id="cancelDelete">Cancel</button>
                </div>
            </div>
        </div>
        <div class="confirmation-modal" id="logoutConfirmationModal">
            <div class="confirmation-content">
                <p>Are you sure you want to log out?</p>
                <div class="confirmation-buttons">
                    <button class="confirm" id="confirmLogout">Yes</button>
                    <button id="cancelLogout">Cancel</button>
                </div>
            </div>
        </div>
        <script>
            const imageGallery = document.getElementById("imageGallery");

            // Function to display images from API response
            function displayImages(images) {
                imageGallery.innerHTML = "";
                images.forEach(image => {
                    const imageElement = document.createElement("div");
                    imageElement.className = "image";
                    imageElement.innerHTML = `
                      <img src="${image.url}" alt="img">
                      <button class="delete-btn" data-id="${image._id}">Delete</button>
                  `;
                    imageGallery.appendChild(imageElement);
                });
            }

            // Fetch and display images on page load
            fetchImages();

            // Fetch images from API
            function fetchImages() {
                // Replace with your API endpoint to fetch images
                const apiUrl = "/pictures/getAll";
                fetch(apiUrl)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data.images.length)
                        displayImages(data.images);
                    })
                    .catch(error => {
                        console.error("Error fetching images:", error);
                    });
            }

            // Delete image using API
            function deleteImage(imageId) {
                // Replace with your API endpoint to delete image
                const apiUrl = `/deletePictures`;
                fetch(apiUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        id: imageId
                    })
                })
                    .then(response => response.json())
                    .then(result => {
                        if (result.success) {
                            // Image deleted successfully, refresh images
                            fetchImages();
                        } else {
                            console.error("Error deleting image:", result.error);
                        }
                    })
                    .catch(error => {
                        console.error("Error deleting image:", error);
                    });
            }



            // Upload image using API
            const uploadBtn = document.querySelector(".upload-btn-wrapper .btn");
            const uploadInput = document.querySelector(".upload-btn-wrapper input[type='file']");

            uploadInput.addEventListener("change", event => {
                const selectedFile = event.target.files[0];
                if (selectedFile) {
                    const formData = new FormData();
                    formData.append("photos", selectedFile);
                    formData.append("type", "gallery");

                    // Replace with your API endpoint to upload image
                    const apiUrl = "/pictures";
                    fetch(apiUrl, {
                        method: "POST",
                        body: formData
                    })
                        .then(response => response.json())
                        .then(result => {
                            if (result.success) {

                                fetchImages();
                            } else {
                                console.error("Error uploading image:", result.error);
                            }
                        })
                        .catch(error => {
                            console.error("Error uploading image:", error);
                        });
                }
            });

            const confirmationModal = document.getElementById("confirmationModal");
            const confirmDeleteButton = document.getElementById("confirmDelete");
            const cancelDeleteButton = document.getElementById("cancelDelete");

            // Variable to store the image ID to be deleted
            let imageToDeleteId = null;

            // Event listener for delete buttons
            imageGallery.addEventListener("click", event => {
                if (event.target.classList.contains("delete-btn")) {
                    imageToDeleteId = event.target.getAttribute("data-id");
                    confirmationModal.style.display = "flex"; // Display the modal
                }
            });

            // Event listener for confirm delete button
            confirmDeleteButton.addEventListener("click", () => {
                if (imageToDeleteId) {
                    deleteImage(imageToDeleteId);
                    imageToDeleteId = null; // Clear the imageToDeleteId
                    confirmationModal.style.display = "none"; // Hide the modal
                }
            });

            // Event listener for cancel delete button
            cancelDeleteButton.addEventListener("click", () => {
                imageToDeleteId = null; // Clear the imageToDeleteId
                confirmationModal.style.display = "none"; // Hide the modal
            });

            const logoutButton = document.getElementById("logout");
            const logoutConfirmationModal = document.getElementById("logoutConfirmationModal");
            const confirmLogoutButton = document.getElementById("confirmLogout");
            const cancelLogoutButton = document.getElementById("cancelLogout");

            // Event listener for Log Out button
            logoutButton.addEventListener("click", () => {
                logoutConfirmationModal.style.display = "flex"; // Display the modal
            });

            // Event listener for confirm Log Out button
            confirmLogoutButton.addEventListener("click", () => {
                // Redirect the user to the logout URL
                window.location.href = "/admin/logout"; // Replace with the actual logout URL
            });

            // Event listener for cancel Log Out button
            cancelLogoutButton.addEventListener("click", () => {
                logoutConfirmationModal.style.display = "none"; // Hide the modal
            });
        </script>
        <script>



            document.addEventListener("DOMContentLoaded", function (event) {

                const showNavbar = (toggleId, navId, bodyId, headerId) => {
                    const toggle = document.getElementById(toggleId),
                        nav = document.getElementById(navId),
                        bodypd = document.getElementById(bodyId),
                        headerpd = document.getElementById(headerId)

                    // Validate that all variables exist
                    if (toggle && nav && bodypd && headerpd) {
                        toggle.addEventListener('click', () => {
                            // show navbar
                            nav.classList.toggle('show')
                            // change icon
                            toggle.classList.toggle('bx-x')
                            // add padding to body
                            bodypd.classList.toggle('body-pd')
                            // add padding to header
                            headerpd.classList.toggle('body-pd')
                        })
                    }
                }

                showNavbar('header-toggle', 'nav-bar', 'body-pd', 'header')

                /*===== LINK ACTIVE =====*/
                const linkColor = document.querySelectorAll('.nav_link')

                function colorLink() {
                    if (linkColor) {
                        linkColor.forEach(l => l.classList.remove('active'))
                        this.classList.add('active')
                    }
                }
                linkColor.forEach(l => l.addEventListener('click', colorLink))

            });
        </script>
    </body>

</html>